import streamlit as st

def main():

    st.sidebar.image("imgs/lucas.png", use_column_width=True)
    st.sidebar.write('"Encuentro soluciones efectivas en el an√°lisis de datos mediante herramientas accesibles y eficientes."')



   
    st.header(" Lucas Sagasta", divider="rainbow")
    st.subheader("Analista de Datos - Cient√≠fico de Datos - Especialista en IA")
    
    
    st.write("")
  
    st.write("üìä Soy un analista de datos especializado en el seguimiento de operaciones, ventas y log√≠stica.")
    st.write("üí° A lo largo de mi carrera, he dise√±ado soluciones de integraci√≥n de datos y visualizaci√≥n de indicadores utilizando diversas plataformas y tecnolog√≠as, como SQL, Python, LookerStudio, Power BI, y Excel, para diferentes sectores industriales.")
    st.write("üõ†Ô∏è Tengo experiencia en la recolecci√≥n y procesamiento de datos, disposici√≥n, creaci√≥n de dashboards, y automatizaci√≥n de reportes diarios v√≠a correo electr√≥nico.")
    st.write("üöÄ He participado en proyectos clave que han impulsado la toma de decisiones estrat√©gicas dentro de las organizaciones.")
    st.write("üåü Soy un profesional comprometido con la mejora continua y la innovaci√≥n, siempre en busca de nuevas formas de aprovechar los datos para generar valor y ventajas competitivas.")

    st.write("")


    # Cargar el archivo PDF (aseg√∫rate de que est√© en el directorio correcto)
    with open("imgs/Lucas S. Data Analyst.pdf", "rb") as file:
        pdf_data = file.read()

    # Crear el bot√≥n de descarga para el PDF
    st.download_button(
        label="Descarga mi CV",
        data=pdf_data,
        file_name="lucas-sagasta-cv.pdf",
        mime="application/pdf",
    )
    


    st.write("")


    st.write("")

    st.header("Algunos de mis trabajos", divider="rainbow")  
    st.write("")

    st.markdown(''' ### **Seguimiento de visitas para vendedores** ''')

    col1,col3 = st.columns([3,4])

    with col3:
        st.image("imgs/seguimiento1.jpg")

  

    with col1:
        st.markdown("""


Este **tablero para m√≥viles** tiene como objetivo ayudar a los **vendedores** de una distribuidora de **telas denim** a:

- Monitorear visitas a clientes.
- Alcanzar sus metas de ventas mensuales.""")
        

    expander = st.expander("Ver mas sobre este proyecto")

    expander.markdown("""
Cada vendedor tiene establecido que debe realizar una visita a cada uno de sus clientes seg√∫n la categor√≠a del mismo. Los resultados de esta implementaci√≥n son:

- **Ayuda a la planificaci√≥n de rutas**.
- **Optimizaci√≥n del tiempo** en la rutina de visitas.
- **Fortalecimiento de la relaci√≥n** con los clientes.
- **Identificaci√≥n de nuevas oportunidades de venta** y respuesta a las necesidades emergentes.

Desde gerencia, se pudo evaluar el rendimiento de cada vendedor, optimizando la gesti√≥n de la cartera de clientes, priorizando a los m√°s importantes y asegurando que se les dedique suficiente tiempo y recursos.
""")
    

    col3,col1 = expander.columns([2,4])

    with col3:
        st.image("imgs/seguimiento2.jpg")

  

    with col1:
        st.markdown("""
### Proceso

1. **Creaci√≥n de Base de Datos**: El primer paso fue crear una base de datos en **Google Sheets** que estableciera la relaci√≥n entre los vendedores y los clientes. Esta lista se actualiza semanalmente mediante una consulta SQL desde Google Sheets a la base de datos de la empresa.
  
2. **Integraci√≥n de Visitas**: Luego, se integran las visitas realizadas en esta base. Para ello, se utiliz√≥ un conector hacia la API de la aplicaci√≥n empleada por los vendedores para registrar las visitas y pedidos de los clientes.
  
3. **Construcci√≥n de la Base Consolidada**: Mediante un script, se construye una base consolidada que contiene toda la informaci√≥n necesaria para la construcci√≥n de los tableros.
  
4. **Creaci√≥n de Tableros**: Se construyeron ocho tableros, uno para cada vendedor, y se otorgaron los permisos correspondientes, asegurando que solo el propio vendedor y los supervisores puedan visualizar su cartera.
  
5. **Reporte Autom√°tico**: Finalmente, se implement√≥ un reporte autom√°tico que env√≠a un correo con el resumen del d√≠a al cierre de la jornada laboral.

""")
        
    st.write("")

    st.markdown(''' ### **Tablero de Control para Centro de Atenci√≥n Telef√≥nica** ''')

    col1, col3 = st.columns([3, 4])

    with col3:
        st.image("imgs/call1.png")

    with col1:
        st.markdown("""
    Este **tablero de control** fue creado para ayudar al **Centro de Atenci√≥n Telef√≥nica del Ministerio de Educaci√≥n de la Naci√≥n**, que gestiona incidencias de los programas **Conectar Igualdad** y **Conectividad Nacional**, a:

    - Monitorear el desempe√±o del √°rea y de cada agente.
    - Identificar √°reas de mejora.
    - Asegurar una operaci√≥n eficiente.""")
            
    expander = st.expander("Ver m√°s sobre este proyecto")

    expander.markdown("""
    ### Informaci√≥n mostrada en el tablero:
    1. **Cantidad de llamadas:**
    - Llamadas atendidas, salientes y perdidas.
    2. **Porcentaje de llamadas atendidas** sobre el total.
    3. **Horas habladas** entre todos los agentes.
    4. **Cantidad de agentes conectados**.
    5. **An√°lisis del tiempo de espera** de los usuarios antes de colgar.
    6. **Desempe√±o detallado de cada agente**: llamadas contestadas y tiempo hablado.
    7. **Informe de llamadas atendidas** en intervalos de 10 minutos.
    8. **Informe de llamadas abandonadas** en intervalos de 10 minutos.
    9. **An√°lisis de n√∫meros no atendidos** y su seguimiento en llamadas sucesivas.

    El tablero optimiza la gesti√≥n de recursos, mejora la experiencia del usuario y reconoce el desempe√±o de los agentes.
    """)

    col3, col1 = expander.columns([2, 4])

    with col3:
        st.image("imgs/call2.png")

    with col1:
        st.markdown("""
    ### Proceso

    1. **Limpieza de datos**: Los informes crudos recibidos del sistema **3CX** se procesaron en **Python**.
    2. **Subida a SQL**: Los datos se almacenaron en una base de datos **SQL**.
    3. **Visualizaci√≥n**: Se crearon gr√°ficos en **Grafana** y con la biblioteca **Apache Echarts**.
    4. **Automatizaci√≥n**: El tablero se actualiza con datos en tiempo real, proporcionando m√©tricas clave.

    ### Resultado

    Este tablero permiti√≥ monitorear el desempe√±o del centro en tiempo real, mejorando la eficiencia operativa y motivando a los agentes al contar con un sistema transparente y de reconocimiento.
    """)
    expander.image("imgs/call3.png")


    

    


        
 


    





# ------------------------------------
# EJECUTAR MAIN
# ------------------------------------
# Ejecutar la funci√≥n main cuando se carga la aplicaci√≥n
if __name__ == "__main__":
    main()